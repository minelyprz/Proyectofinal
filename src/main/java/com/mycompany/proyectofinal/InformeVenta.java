/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.proyectofinal;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.time.LocalTime;
import java.util.HashSet;
import java.util.Set;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author minely
 */
public class InformeVenta extends javax.swing.JFrame {
   private DefaultTableModel modeloTabla;
   
    /**
     * Creates new form InformeVenta
     */
    public InformeVenta() {
        initComponents();
         modeloTabla = new DefaultTableModel(new String[]{"Costo Con IVA", "Costo Sin IVA", "Descuento", "Fecha","Hora", "NIT cliente", "Nombre Cliente", "Dirección Cliente","Vendedor"}, 0);
        jTable1.setModel(modeloTabla);
        cargarDatos();
    }
    
     private void cargarDatos() {
         modeloTabla.setRowCount(0);
         Set<String> ventasMostradas = new HashSet<>();
        for (VentaLibros venta : Rventa.obtenerVentas() ) {
             String keyUnica = venta.getNitcliente() + venta.getFecha() + venta.getHora();
    
    if (ventasMostradas.contains(keyUnica)) {
        continue;  // Ya se mostró esta venta
    }
              ventasMostradas.add(keyUnica);
            LocalDate fecha = venta.getFecha();
            String hora = venta.getHora().toString(); // O guarda la hora en la clase VentaLibros
            String nit = venta.getNitcliente();
            String nombre = venta.getNombreCliente();
            String direccion = venta.getDireccion();
            String vendedor = venta.getVendedor().getNombre();

            double totalConIva = venta.getTotal(); // asumimos que ya tiene IVA
            double totalSinIva = totalConIva / 1.12;
            String tipoDescuento = venta.getTipoDescuento();
        double valorOriginal = venta.getValorOriginal();

        String descuento;
        if ("porcentaje".equalsIgnoreCase(tipoDescuento)) {
            // Mostrar porcentaje sin decimales: "10%"
            descuento = String.format("%.2f%%", valorOriginal);
        } else if ("monto".equalsIgnoreCase(tipoDescuento)) {
            // Mostrar monto con 2 decimales: "Q25.00"
            descuento = String.format("Q%.2f", venta.getDescuento());
        } else {
            descuento = "0.00";
        }
           modeloTabla.addRow(new Object[]{
    String.format("%.2f", totalConIva),
    String.format("%.2f", totalSinIva),
    descuento,
    fecha.toString(),
    hora,
    nit,
    nombre,
    direccion,
    vendedor
    });
        }
    }
    

     
     
     
     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Courier 10 Pitch", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 153));
        jLabel1.setText("INFORME DE VENTAS");

        jTable1.setFont(new java.awt.Font("Courier 10 Pitch", 0, 13)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setFont(new java.awt.Font("Courier 10 Pitch", 1, 13)); // NOI18N
        jButton1.setText("Exportar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Courier 10 Pitch", 1, 13)); // NOI18N
        jButton2.setText("Cerrar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(286, 286, 286)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1011, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(43, 43, 43)
                .addComponent(jButton2)
                .addGap(77, 77, 77))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(135, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
     this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JFileChooser fc = new JFileChooser();
fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);  // Solo seleccionar carpeta
int seleccion = fc.showSaveDialog(this);
if (seleccion == JFileChooser.APPROVE_OPTION) {
    File carpeta = fc.getSelectedFile();
    String nombreArchivo = "Informe de ventas.csv";
    File archivo = new File(carpeta, nombreArchivo);  // Une ruta + nombre archivo

    try (FileWriter csvWriter = new FileWriter(archivo)) {
        // Aquí tu código para escribir el CSV usando csvWriter
        // Ejemplo escribir encabezados y filas
        for (int i = 0; i < modeloTabla.getColumnCount(); i++) {
            csvWriter.append(modeloTabla.getColumnName(i));
            if (i < modeloTabla.getColumnCount() - 1) {
                csvWriter.append(",");
            }
        }
        csvWriter.append("\n");
        for (int i = 0; i < modeloTabla.getRowCount(); i++) {
            for (int j = 0; j < modeloTabla.getColumnCount(); j++) {
                Object valor = modeloTabla.getValueAt(i, j);
                String valorStr = valor == null ? "" : valor.toString();
                valorStr = valorStr.replace("\"", "\"\"");
                if (valorStr.contains(",") || valorStr.contains("\"")) {
                    valorStr = "\"" + valorStr + "\"";
                }
                csvWriter.append(valorStr);
                if (j < modeloTabla.getColumnCount() - 1) {
                    csvWriter.append(",");
                }
            }
            csvWriter.append("\n");
        }
        csvWriter.flush();
        JOptionPane.showMessageDialog(this, "Informe exportado exitosamente a:\n" + archivo.getAbsolutePath());
    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "Error al exportar el informe: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
}

    }//GEN-LAST:event_jButton1ActionPerformed

  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
